describe("Lending books test", () => {
  it("Visits page", () => {
    cy.visit("http://localhost:4200/")
  })
  it("Adds a borrower", () => {
    cy.get("a[routerLink='/borrowers'").click()
    cy.get(".btn-primary").click()
    cy.get(".form-control").eq(1).should("have.class", "is-invalid")
    cy.get(".form-control").eq(2).should("have.class", "is-invalid")
    cy.get(".modal-footer>button").should("be.disabled")
    cy.get(".form-control").eq(1).type("cyFirst", { force: true })
    cy.get(".form-control").eq(2).type("cyLast", { force: true })
    cy.get(".form-control").eq(1).should("have.class", "is-valid")
    cy.get(".form-control").eq(2).should("have.class", "is-valid")
    cy.get(".modal-footer>button").click()
    cy.contains("Borrower successfully added")
    cy.get("input[name='searchTerm']").type("cyFirst")
    cy.contains("Found 1")
    cy.get("table").contains("cyFirst")
    cy.get("table").contains("cyLast")
  })
  it("Adds a book", () => {
    cy.get("a[routerLink='/books/available'").click()
    cy.get(".btn-primary").click()
    cy.get(".form-control").eq(1).should("have.class", "is-invalid")
    cy.get(".form-control").eq(2).should("have.class", "is-invalid")
    cy.get(".modal-footer>button").should("be.disabled")
    cy.get(".form-control").eq(1).type("cyAuthor", { force: true })
    cy.get(".form-control").eq(2).type("cyTitle", { force: true })
    cy.get(".form-control").eq(1).should("have.class", "is-valid")
    cy.get(".form-control").eq(2).should("have.class", "is-valid")
    cy.get(".modal-footer>button").click()
    cy.contains("Book successfully added")
  })
  it("Lends a book", () => {
    cy.get("input[name='searchTerm']").type("cyAuthor")
    cy.get("i[ngbTooltip='Lend']").click()
    cy.get(".form-control").eq(1).should("have.class", "is-invalid")
    cy.get(".modal-footer>button").should("be.disabled")
    cy.get(".form-control").eq(1).type("cyFirst cyLas", { force: true })
    cy.get(".form-control").eq(1).type("t", { force: true })
    cy.get("button").contains("cyFirst").click()
    cy.get(".form-control").eq(1).should("have.class", "is-valid")
    cy.get(".modal-footer>button").click()
    cy.contains("Book successfully lent")
  })
  it("Returns a book", () => {
    cy.get("a[routerLink='/books/lent'").click()
    cy.get("input[name='searchTerm']").type("cyFirst")
    cy.contains("Found 1")
    cy.get("table").contains("cyAuthor")
    cy.get("table").contains("cyTitle")
    cy.get("table").contains("cyFirst")
    cy.get("table").contains("cyLast")
    cy.get("i[ngbTooltip='Return']").click()
    cy.get(".btn-outline-primary").click()
    cy.contains("Book successfully returned")
    cy.contains("Found 0")
  })
  it("Checks lending history of a book", () => {
    cy.get("a[routerLink='/books/available'").click()
    cy.contains("Found 1")
    cy.get("table").contains("cyAuthor")
    cy.get("table").contains("cyTitle")
    cy.get("i[ngbTooltip='Lending history']").click()
    cy.get("input[name='searchTerm']").type("cyFirst")
    cy.contains("Found 1")
    cy.go('back')
  })
  it("Deletes a book", () => {
    cy.get(".ti-trash").click()
    cy.get(".btn-outline-danger").click()
    cy.contains("Book deleted")
    cy.contains("Found 0")
  })
  it("Deletes a borrower", () => {
    cy.get("a[routerLink='/borrowers'").click()
    cy.contains("Found 1")
    cy.get("table").contains("cyFirst")
    cy.get("table").contains("cyLast")
    cy.get(".ti-trash").click()
    cy.get(".btn-outline-danger").click()
    cy.contains("Borrower deleted")
    cy.contains("Found 0")
  })
});
